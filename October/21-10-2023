
#include<bits/stdc++.h>
using namespace std;

class TreeNode {
      int val;
      TreeNode *left;
      TreeNode *right;
      TreeNode() : val(0), left(nullptr), right(nullptr) {}
      TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
      TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 };

class Solution {
public:
    vector<vector<int>> ans;
    
    void solve(vector<int>& temp,TreeNode* root,int target)
    {
        if(!root) return;
        temp.push_back(root->val);
        if(!root->left && !root->right)
        {
            if(target-root->val==0) 
              ans.push_back(temp);
        }
        solve(temp,root->left,target-root->val);
        solve(temp,root->right,target-root->val);
        temp.pop_back();
        return;
    }

    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<int> temp;
        solve(temp,root,targetSum);
        return ans;
    }
};


solve(root,targetSum);

/* root is pointing to [5,4,8,11,null,13,4,7,2,null,null,5,1]  
       targetSum = 22
*/

//   Guess The Output    
