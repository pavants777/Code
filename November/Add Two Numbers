/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry = 0; 
        ListNode* newHead = new ListNode(-1);
        ListNode* temp = newHead;

        while(l1 && l2){
            int n = l1->val + l2->val + carry;
            ListNode* dummy = new ListNode(n%10);
            carry = n/10;
            temp->next = dummy;
            temp = dummy;
            l1=l1->next;
            l2=l2->next;
        }
        while(l1){
            int n = l1->val+carry;
            ListNode* dummy = new ListNode(n%10);
            carry = n/10;
            temp->next = dummy;
            temp= dummy;
            l1=l1->next;
        }
        while(l2){
            int n =l2->val+carry;
            ListNode* dummy = new ListNode(n%10);
            carry = n/10;
            temp->next = dummy;
            temp = dummy;
            l2=l2->next;
        }
        if(carry){
            ListNode* dummy = new ListNode(carry);
            temp->next=dummy;
        }
        return newHead->next;
    }
};


problem link - https://leetcode.com/problems/add-two-numbers/
