https://www.geeksforgeeks.org/problems/flatten-bst-to-sorted-list--111950/1

// C++
class Solution
{
public:
    Node* find(Node* res, Node* root) {
        if (root == nullptr) return res;
        res = find(res, root->left);
        Node *temp = new Node(root->data);
        res->right = temp;
        res = temp;
        res = find(res, root->right);
        return res;
    }

    Node *flattenBST(Node *root) {
        Node *temp = new Node(-1);
        Node *res = temp;
        find(temp, root);
        return res->right;
    }
};


//Python 
class Solution:
    def find(self, root, res):
        if root is None:
            return res

        res = self.find(root.left, res)
        temp = Node(root.data)
        res.right = temp
        res = temp
        res = self.find(root.right, res)
        return res

    def flattenBST(self, root):
        if root is None:
            return None
        
        temp = Node(-1)
        res = temp
        self.find(root, temp)
        return res.right
